// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TM.Models;

#nullable disable

namespace TM.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250619033208_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TM.Models.Entities.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__Country__3214EC0707FF62DC");

                    b.HasIndex(new[] { "Name" }, "UQ__Country__737584F67CFF0565")
                        .IsUnique();

                    b.HasIndex(new[] { "Code" }, "UQ__Country__A25C5AA781CE55DD")
                        .IsUnique();

                    b.ToTable("Country", (string)null);
                });

            modelBuilder.Entity("TM.Models.Entities.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("LocationName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__Location__3214EC074AC8A40E");

                    b.HasIndex("CountryId");

                    b.ToTable("Location", (string)null);
                });

            modelBuilder.Entity("TM.Models.Entities.Passenger", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal?>("AssignedPrice")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<decimal?>("CustomerPaid")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<DateOnly?>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DeleteAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("IdentityNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Phone")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("Reserved");

                    b.Property<int?>("TourId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Passenge__3214EC07A9F840C4");

                    b.HasIndex("TourId");

                    b.ToTable("Passenger", (string)null);
                });

            modelBuilder.Entity("TM.Models.Entities.Tour", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ArrivalFlightInfo")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("AvailableSeats")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DeleteAt")
                        .HasColumnType("datetime");

                    b.Property<string>("DepartureFlightInfo")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("DepartureLocation")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("DiscountPrice")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FullPayDeadline")
                        .HasColumnType("datetime");

                    b.Property<decimal>("HhFee")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<int?>("HoldTime")
                        .HasColumnType("int");

                    b.Property<bool?>("IsAutoHoldTime")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsVisaRequired")
                        .HasColumnType("bit");

                    b.Property<int?>("LocationId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Note")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("RoomNote")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<decimal>("SuggestPrice")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<int>("TotalSeats")
                        .HasColumnType("int");

                    b.Property<DateTime?>("VisaDeadline")
                        .HasColumnType("datetime");

                    b.HasKey("Id")
                        .HasName("PK__Tour__3214EC0714C1900D");

                    b.HasIndex("LocationId");

                    b.ToTable("Tour", (string)null);
                });

            modelBuilder.Entity("TM.Models.Entities.TourSurcharge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DeleteAt")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("TourId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__TourSurc__3214EC0741E14AA3");

                    b.HasIndex("TourId");

                    b.ToTable("TourSurcharge", (string)null);
                });

            modelBuilder.Entity("TM.Models.Entities.Location", b =>
                {
                    b.HasOne("TM.Models.Entities.Country", "Country")
                        .WithMany("Locations")
                        .HasForeignKey("CountryId")
                        .IsRequired()
                        .HasConstraintName("FK__Location__Countr__30C33EC3");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("TM.Models.Entities.Passenger", b =>
                {
                    b.HasOne("TM.Models.Entities.Tour", "Tour")
                        .WithMany("Passengers")
                        .HasForeignKey("TourId")
                        .HasConstraintName("FK__Passenger__TourI__2FCF1A8A");

                    b.Navigation("Tour");
                });

            modelBuilder.Entity("TM.Models.Entities.Tour", b =>
                {
                    b.HasOne("TM.Models.Entities.Location", "Location")
                        .WithMany("Tours")
                        .HasForeignKey("LocationId")
                        .HasConstraintName("FK__Tour__LocationId__2EDAF651");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("TM.Models.Entities.TourSurcharge", b =>
                {
                    b.HasOne("TM.Models.Entities.Tour", "Tour")
                        .WithMany("TourSurcharges")
                        .HasForeignKey("TourId")
                        .HasConstraintName("FK__TourSurch__TourI__31B762FC");

                    b.Navigation("Tour");
                });

            modelBuilder.Entity("TM.Models.Entities.Country", b =>
                {
                    b.Navigation("Locations");
                });

            modelBuilder.Entity("TM.Models.Entities.Location", b =>
                {
                    b.Navigation("Tours");
                });

            modelBuilder.Entity("TM.Models.Entities.Tour", b =>
                {
                    b.Navigation("Passengers");

                    b.Navigation("TourSurcharges");
                });
#pragma warning restore 612, 618
        }
    }
}
