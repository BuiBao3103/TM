@model TM.Models.ViewModels.TourSurchargeViewModel

@{
    ViewData["Title"] = "Thêm phụ phí";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <!-- Header -->
            <div class="d-flex justify-content-between align-items-center mb-4">
                <div>
                    <h2 class="text-primary mb-1">
                        <i class="fas fa-receipt me-2"></i>Thêm phụ phí
                    </h2>
                    <p class="text-muted mb-0">Thêm phụ phí cho tour <strong>@Model.TourName</strong></p>
                </div>
            </div>

            <!-- Form Card -->
            <div class="card shadow-sm">
                <div class="card-header bg-primary text-white">
                    <h5 class="mb-0">
                        <i class="fas fa-plus-circle me-2"></i>Thông tin phụ phí
                    </h5>
                </div>
                <div class="card-body">
                    <form asp-action="CreateSurcharge" method="post">
                        <input type="hidden" asp-for="TourId" />
                        <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label asp-for="Name" class="form-label fw-semibold">
                                    <i class="fas fa-tag me-1"></i>Tên phụ phí
                                </label>
                                <input asp-for="Name" class="form-control" placeholder="Nhập tên phụ phí..." />
                                <span asp-validation-for="Name" class="text-danger small"></span>
                            </div>
                            <div class="col-md-6 mb-3">
                                <label asp-for="Amount" class="form-label fw-semibold d-flex justify-content-between">
                                    <span>
                                        <i class="fas fa-money-bill-wave me-1"></i>Số tiền
                                    </span>
                                    <small id="AmountDisplay" class="text-success"></small>
                                </label>
                                <div class="input-group">
                                    <input asp-for="Amount" class="form-control" type="number" min="0" placeholder="Nhập số tiền..." />
                                    <span class="input-group-text">VNĐ</span>
                                </div>
                                <span asp-validation-for="Amount" class="text-danger small"></span>
                            </div>
                        </div>
                        <div class="text-end pt-3">
                            <button type="submit" class="btn btn-success">
                                <i class="fas fa-save me-1"></i>Thêm phụ phí
                            </button>
                            <a asp-controller="Tour" asp-action="Edit" asp-route-id="@Model.TourId" class="btn btn-secondary ms-2">
                                <i class="fas fa-arrow-left me-1"></i>Quay lại
                            </a>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        function updateFormattedDisplay(input, displayId) {
            const value = input.value.replace(/\D/g, ''); // remove non-digit
            const display = document.getElementById(displayId);
            if (!display) return;

            if (value) {
                const formatted = Number(value).toLocaleString('vi-VN') + ' VNĐ';
                display.innerText = formatted;
            } else {
                display.innerText = '';
            }
        }

        document.addEventListener('DOMContentLoaded', () => {
            const fields = ['Amount'];

            fields.forEach(name => {
                const input = document.querySelector(`input[name="${name}"]`);
                const displayId = `${name}Display`;

                if (input) {
                    input.addEventListener('input', () => {
                        updateFormattedDisplay(input, displayId);
                    });

                    updateFormattedDisplay(input, displayId);
                } else {
                    console.warn(`Không tìm thấy input[name="${name}"]`);
                }
            });
        });
    </script>
}

<style>
    .form-label {
        color: #495057;
    }
    .form-control:focus {
        border-color: #0d6efd;
        box-shadow: 0 0 0 0.2rem rgba(13, 110, 253, 0.15);
    }
    .card {
        border: none;
        border-radius: 0.75rem;
    }
    .input-group-text {
        background-color: #f8f9fa;
        border-color: #dee2e6;
    }
    .btn-success {
        min-width: 140px;
    }
    .btn-secondary {
        min-width: 120px;
    }
</style> 